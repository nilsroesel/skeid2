{"version":3,"file":"promises.js","sourceRoot":"","sources":["../../playground/promises.ts"],"names":[],"mappings":"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","sourcesContent":["\nclass OptionalPromise<T> extends Promise<T> {\n    static of<T>( value: T | Promise<T> ): OptionalPromise<T> {\n        // @ts-ignore\n        return new OptionalPromise(async resolve => {\n            if ( value instanceof Promise ) return value.then(v => resolve(v));\n            return resolve(value)\n        });\n    }\n\n    // @ts-ignore\n    private constructor( arg ) {\n        super(arg);\n    }\n\n    public filter( predicate: ( value: T) => boolean ): OptionalPromise<T> {\n        // @ts-ignore\n        return new OptionalPromise(async resolve => {\n            const rawValue = await this.then();\n            if ( rawValue === null || rawValue === undefined ) return resolve();\n            if (  predicate(rawValue) ) return resolve(rawValue);\n            else return resolve();\n        });\n    }\n\n    public map<R>( mapper: (value: T) => R ): OptionalPromise<R> {\n        // @ts-ignore\n        return new OptionalPromise(async resolve => {\n            const mapperResult = await this.then(v => mapper(v));\n            return resolve(mapperResult)\n        });\n    }\n\n    public ifPresent( action: (value: T) => void): void {\n        this.then(v => {\n            if (v !== undefined && v !== null) action(v);\n        });\n    }\n}\n\nclass ArrayPromise<T> extends Promise<T> {\n    static of<T>( value: Array<T> | Promise<Array<T>> ): ArrayPromise<T> {\n        // @ts-ignore\n        return new ArrayPromise(async resolve => {\n            if ( value instanceof Promise ) return value.then(v => resolve(v));\n            return resolve(value)\n        });\n    }\n\n    // @ts-ignore\n    private constructor( arg ) {\n        super(arg);\n    }\n\n    filter( predicate: (item: T, index?: number, array?: Array<T>) => boolean ): ArrayPromise<T> {\n        // @ts-ignore\n        return new ArrayPromise(async resolve => {\n            const array: Array<T> = await this.then();\n            resolve(array.filter(v => predicate(v)));\n        });\n    }\n\n\n    map<R>( mapper: (item: T, index?: number, array?: Array<T>) => R ): ArrayPromise<R> {\n        // @ts-ignore\n        return new ArrayPromise(async resolve => {\n            const array: Array<T> = await this.then();\n            resolve(array.map(v => mapper(v)));\n        });\n    }\n\n    reduce<R>(reducer: (accumulator: R, current: T, index?: number, array?: Array<T>) => R, initializer?: R): Promise<R> {\n        // @ts-ignore\n        return new ArrayPromise(async resolve => {\n            const array: Array<T> = await this.then();\n            if ( initializer === undefined )\n                // @ts-ignore\n                return resolve(array.reduce((a, c, i, arr) => reducer(a as T, c, i, arr)));\n            return resolve(array.reduce((a, c, i, arr) => reducer(a, c, i, arr), initializer));;\n        }).then();\n    }\n\n\n}\n\nOptionalPromise.of(1)\n    .map(v => v + 1)\n    .filter(v => v > 1)\n    .ifPresent(value => console.log('Of simple', value));\n\nOptionalPromise.of(Promise.resolve().then(() => 1))\n    .map(v => v + 1)\n    .filter(v => v > 1)\n    .ifPresent(value => console.log('Of promise', value));\n\nconst arrPromise = Promise.resolve().then(() => [1,2,3,4]);\nArrayPromise.of(arrPromise).filter(v => v % 2 === 0).map(v => v + 1).then(console.log)\n// @ts-ignore\nArrayPromise.of(arrPromise).reduce((acc, curr) => acc + curr).then(console.log)\n\n"]}