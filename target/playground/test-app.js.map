{"version":3,"file":"test-app.js","sourceRoot":"","sources":["../../playground/test-app.ts"],"names":[],"mappings":"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","sourcesContent":["import { Component } from '../lib/injection/src/component';\nimport {\n    Application,\n    Consumes,\n    Deserialize,\n    Get, PathVariable,\n    Post,\n    Produces, QueryParameters,\n    RequestBody,\n    ResponseEntity\n} from '../lib/server/src/decorators';\nimport { RestSchema } from '../lib/server/src/schema';\nimport { TextResponse } from '../lib/server/src/connectivity';\nimport { ApiError } from '../lib/server/src/error';\nimport { Stream } from 'stream';\n\ninterface Echo {\n    echo: string;\n}\nconst EchoSchema = new RestSchema<Echo>({ echo: String });\nRestSchema.any()\n@Produces(501)\n@Deserialize(JSON.stringify, 'text/plain')\nclass NotImplementedError extends ApiError {\n    constructor(message: string) {\n        super(501, message);\n    }\n}\n\n// Third Party error decorating\nDeserialize<Error>(err => err.stack || (err as any).toString())(Error);\nProduces(500, 'text/plain')(Error);\n\nDeserialize<ApiError>(JSON.stringify, 'application/json')(ApiError)\nProduces<ApiError>(err => err.code)(ApiError)\n\n\n@Deserialize<Version>(v => JSON.stringify({ version: v.versionNumber }), 'application/json')\nclass Version {\n    constructor(public readonly versionNumber: string) {}\n}\n\n@Deserialize<HtmlVersion>(v => v.template, 'text/html')\nclass HtmlVersion extends Version {\n    public template = `<html lang=\"EN\"><body><h2>Version: ${ this.versionNumber }</h2></body></html>`\n}\n\n@Component\n@Application({ port: 80 })\nclass Api {\n\n    @Get('/error')\n    public raiseError() {\n        const random = Math.random();\n        if ( random >= 0.5 )\n            throw new ApiError(503, 'An expected un√•expected condition occurred');\n        throw new NotImplementedError('This endpoint is not implemented.');\n    }\n\n    @Get('/static')\n    @Produces<Version | HtmlVersion>(v => v instanceof HtmlVersion ? 201: 200)\n    public staticServe(): Version | HtmlVersion {\n        const random = Math.random();\n        if ( random >= 0.5 ) return new HtmlVersion('api-v0:html');\n        return new Version('api-v0:json');\n    }\n\n    @Post('/echo')\n    @Consumes('application/json')\n    @Produces(200, 'application/json')\n    public echoStrictJsonBody( @RequestBody(EchoSchema) echoBody: Echo ) {\n        return echoBody;\n    }\n\n    @Post('/echo')\n    @Consumes('text/plain')\n    @Produces(200, 'text/plain')\n    public echoStringBody( @RequestBody(RestSchema.string()) echoBody: string ) {\n        return echoBody;\n    }\n\n    @Post('/echo')\n    public echoSomething(\n        @RequestBody(RestSchema.string()) echoBody: any,\n        @ResponseEntity(f => f.TextResponseEntity) response: TextResponse\n    ) {\n        response.status(200, 'Echo Ok');\n        response.setHeader('Content-Type', 'text/plain');\n        response.body(echoBody);\n        response.respond();\n    }\n}\n"]}