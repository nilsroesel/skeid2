{"version":3,"file":"autowire.js","sourceRoot":"","sources":["../../../../lib/injection/src/autowire.ts"],"names":[],"mappings":";;AAAA,4BAAyB;AAEzB,yCAA0D;AAC1D,qDAK4B;AAE5B,SAAgB,SAAS,CAAE,SAAqD,EAAE,GAAe;IAC7F,IAAK,CAAE,6BAAc,CAAC,SAAS,CAAC,IAAI,0BAAW,CAAC,SAAS,CAAC,CAAE,IAAI,GAAG,KAAK,SAAS,EAAG;QAChF,OAAO,wBAAwB,CAAC,SAAS,CAAC,CAAC;KAC9C;IAED,IAAK,OAAO,GAAG,KAAK,QAAQ,EAAG;QAC3B,OAAO,sBAAsB,CAAC,SAAS,EAAE,GAAG,CAAC,CAAC;KACjD;AACL,CAAC;AARD,8BAQC;AAED,SAAS,wBAAwB,CAAE,SAA4C;IAC3E,IAAI,cAAsB,CAAC;IAC3B,IAAK,6BAAc,CAAC,SAAS,CAAC,EAAG;QAC7B,cAAc,GAAG,SAAS,CAAC,IAAI,CAAC;KACnC;SAAM,IAAK,0BAAW,CAAC,SAAS,CAAC,EAAG;QACjC,cAAc,GAAG,MAAM,CAAC,SAAS,CAAC,CAAC;KACtC;SAAM;QACH,MAAM,IAAI,KAAK,CAAC,oCAAoC,CAAC,CAAC;KACzD;IACD,OAAO,CAAE,MAAc,EAAG,GAAoB,EAAG,EAAE;QAC/C,uCAA4B,CAAC,GAAG,CAAC,cAAc,EAAE,EAAE,MAAM,EAAE,GAAG,EAAE,CAAC,CAAC;IACtE,CAAC,CAAA;AACL,CAAC;AAED,SAAS,sBAAsB,CAAE,MAAc,EAAE,GAAc;IAC3D,MAAM,KAAK,GAAG,OAAO,CAAC,WAAW,CAAC,aAAa,EAAE,MAAa,EAAE,GAAgB,CAAC,CAAC;IAClF,IAAK,CAAC,KAAK,EAAG;QACV,MAAM,IAAI,KAAK,CAAC;;;;;;;aAOX,CAAC,CAAC;KACV;IACD,uCAA4B,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI,EAAE,EAAE,MAAM,EAAE,GAAG,EAAE,CAAC,CAAC;AAClE,CAAC","sourcesContent":["import 'reflect-metadata'\n\nimport { modifiableApplicationContext } from './internal';\nimport {\n    Instantiable,\n    isInstantiable,\n    isQualifier,\n    Qualifier\n} from '../../global-types';\n\nexport function Autowired( qualifier: Instantiable<unknown> | Object | Qualifier, key?: Qualifier ):  any  {\n    if ( ( isInstantiable(qualifier) || isQualifier(qualifier) ) && key === undefined ) {\n        return handleAsDecoratorFactory(qualifier);\n    }\n\n    if ( typeof key === 'string' ) {\n        return handleAsPlainDecorator(qualifier, key);\n    }\n}\n\nfunction handleAsDecoratorFactory( qualifier: Instantiable<unknown> | Qualifier ): PropertyDecorator {\n    let qualifyingName: string;\n    if ( isInstantiable(qualifier) ) {\n        qualifyingName = qualifier.name;\n    } else if ( isQualifier(qualifier) ) {\n        qualifyingName = String(qualifier);\n    } else {\n        throw new Error('Unexpected qualifier of dependency');\n    }\n    return ( target: Object , key: string | symbol ) => {\n        modifiableApplicationContext.add(qualifyingName, { target, key });\n    }\n}\n\nfunction handleAsPlainDecorator( target: Object, key: Qualifier ): void {\n    const field = Reflect.getMetadata('design:type', target as any, key as Qualifier);\n    if ( !field ) {\n        throw new Error(`Circular Dependency detected.\n                The reflection api will return undefined if so.\n                This issue is related to circular dependencies in typescripts module resolution.\n                Check out the following discussions for the issue\n                https://github.com/Microsoft/TypeScript/issues/4521\n                https://github.com/Microsoft/TypeScript/issues/20361\n                If this general issue is solved, the circular dependencies would work here without issues.\n            `);\n    }\n    modifiableApplicationContext.add(field.name, { target, key });\n}\n"]}