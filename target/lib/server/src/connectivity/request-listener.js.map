{"version":3,"file":"request-listener.js","sourceRoot":"","sources":["../../../../../lib/server/src/connectivity/request-listener.ts"],"names":[],"mappings":";;AACA,8CAA2C;AAC3C,6BAA0B;AAE1B,MAAa,mBAAmB;IAE5B,QAAQ;QACJ,OAAO,CAAE,OAAwB,EAAE,QAAwB,EAAS,EAAE;YAClE,IAAK,OAAO,CAAC,MAAM,KAAK,SAAS,IAAI,OAAO,CAAC,GAAG,KAAK,SAAS;gBAAG,OAAO;YACxE,MAAM,kBAAkB,GAAa,eAAM,CAAC,YAAY,CAAC,OAAO,CAAC,MAAM,EAAE,IAAI,SAAG,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC;QACnG,CAAC,CAAA;IACL,CAAC;CAEJ;AATD,kDASC","sourcesContent":["import { IncomingMessage, ServerResponse } from 'http';\nimport { router } from '../routing/router';\nimport { URL } from 'url';\n\nexport class HttpRequestListener implements RequestListener {\n\n    listener() {\n        return ( request: IncomingMessage, response: ServerResponse ): void => {\n            if ( request.method === undefined || request.url === undefined ) return;\n            const functionOnEndpoint: Function = router.routeRequest(request.method, new URL(request.url));\n        }\n    }\n\n}\n\nexport interface RequestListener {\n    listener(): ( request: IncomingMessage, response: ServerResponse ) => void;\n}\n"]}