{"version":3,"file":"route-part.js","sourceRoot":"","sources":["../../../../../lib/server/src/router/route-part.ts"],"names":[],"mappings":";;AAAA,wDAAoF;AAEpF,MAAa,SAAS;IAalB,YAA6B,IAAY;QAAZ,SAAI,GAAJ,IAAI,CAAQ;IAAI,CAAC;IAXvC,MAAM,CAAC,mBAAmB,CAAE,IAAY;QAC3C,IAAK,IAAI,KAAK,IAAI,IAAI,IAAI,KAAK,SAAS,EAAG;YACvC,MAAM,IAAI,SAAS,CAAC,kDAAmD,IAAK,GAAG,CAAC,CAAC;SACpF;QAED,IAAK,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,IAAI,IAAI,CAAC,MAAM,IAAI,CAAC,IAAI,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,EAAG;YAClE,MAAM,IAAI,4CAAoC,EAAE,CAAC;SACpD;QACD,OAAO,IAAI,SAAS,CAAC,IAAI,CAAC,CAAC;IAC/B,CAAC;IAIM,qBAAqB,CAAE,OAAe;QACzC,IAAK,IAAI,CAAC,cAAc,EAAE,EAAG;YACzB,OAAO,IAAI,CAAC;SACf;QACD,OAAO,OAAO,KAAK,IAAI,CAAC,IAAI,CAAC;IACjC,CAAC;IAEM,OAAO;QACV,IAAK,IAAI,CAAC,cAAc,EAAE,EAAG;YACzB,OAAO,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAA;SAC5B;QACD,OAAO,IAAI,CAAC,IAAI,CAAC;IACrB,CAAC;IAEM,cAAc;QACjB,OAAO,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC;IAChE,CAAC;CAEJ;AAjCD,8BAiCC","sourcesContent":["import { SpecifiedPathParameterHasNoNameError } from '../../../configuration/error';\n\nexport class RoutePart {\n\n    public static constructFromString( part: string ): RoutePart | never {\n        if ( part === null || part === undefined ) {\n            throw new TypeError(`Invalid argument. Expected [string], but got: [${ part }]`);\n        }\n\n        if ( part.startsWith('{') && part.length <= 3 && part.endsWith('}') ) {\n            throw new SpecifiedPathParameterHasNoNameError();\n        }\n        return new RoutePart(part);\n    }\n\n    private constructor( private part: string ) {}\n\n    public matchesSplitedUrlPart( urlPart: string ) {\n        if ( this.isPathVariable() ) {\n            return true;\n        }\n        return urlPart === this.part;\n    }\n\n    public getPart(): string {\n        if ( this.isPathVariable() ) {\n            return this.part.slice(1)\n        }\n        return this.part;\n    }\n\n    public isPathVariable(): boolean {\n        return this.part.startsWith('{') && this.part.endsWith('}');\n    }\n\n}\n"]}