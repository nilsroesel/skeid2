{"version":3,"file":"application-ready-state.js","sourceRoot":"","sources":["../../../../../lib/server/src/decorators/application-ready-state.ts"],"names":[],"mappings":";;AAAA,mCAAsC;AACtC,sFAAiF;AACjF,mCAAgD;AAChD,wDAAyE;AACzE,8CAA2C;AAE3C,MAAa,qBAAqB;IAAlC;QAEY,wBAAmB,GAAiB,IAAI,qBAAY,EAAE,CAAC;QACvD,YAAO,GAAY,KAAK,CAAC;QAEzB,yBAAoB,GAAW,CAAC,CAAC;QACjC,sBAAiB,GAAW,CAAC,CAAC;IAqC1C,CAAC;IAnCU,6BAA6B;QAChC,EAAE,IAAI,CAAC,oBAAoB,CAAC;IAChC,CAAC;IAEM,0BAA0B;QAC7B,EAAE,IAAI,CAAC,iBAAiB,CAAC;QACzB,IAAK,IAAI,CAAC,iBAAiB,KAAK,IAAI,CAAC,oBAAoB,EAAG;YACxD,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;YACvC,IAAI,CAAC,mBAAmB,CAAC,kBAAkB,CAAC,OAAO,CAAC,CAAC;SACxD;IACL,CAAC;IAEM,OAAO,CAAE,QAAoB;QAChC,IAAK,IAAI,CAAC,OAAO,EAAG;YAChB,QAAQ,EAAE,CAAC;SACd;aAAM;YACH,IAAI,CAAC,mBAAmB,CAAC,WAAW,CAAC,OAAO,EAAE,QAAQ,CAAC,CAAC;SAC3D;IACL,CAAC;IAEM,eAAe,CAAE,UAAkB,EAAE,KAAa,EAAE,MAAW,EAAE,UAAkB;QACtF,gEAAgE;QAChE,kFAAkF;QAClF,yEAAyE;QACzE,UAAU,CAAC,GAAG,EAAE;YACZ,yCAAkB,CAAC,cAAc,CAAC,MAAM,CAAC,WAAW,CAAC,CAAC,IAAI,CAAC,CAAE,SAAc,EAAG,EAAE;gBAC5E,MAAM,MAAM,GAAY,SAAS,CAAC,UAAU,CAAC,CAAC;gBAC9C,IAAK,CAAC,6BAAqB,CAAC,MAAM,CAAC,EAAG;oBAClC,MAAM,IAAI,iCAAyB,CAAC,MAAM,EAAE,UAAU,CAAC,CAAC;iBAC3D;gBACD,IAAI,CAAC,0BAA0B,EAAE,CAAC;gBAClC,eAAM,CAAC,aAAa,CAAC,UAAU,EAAE,KAAK,EAAE,GAAG,EAAE,CAAC,MAAM,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,CAAC;YAC3E,CAAC,CAAC,CAAA;QACN,CAAC,EAAE,GAAG,CAAC,CAAC;IACZ,CAAC;CACJ;AA3CD,sDA2CC;AAEY,QAAA,qBAAqB,GAA0B,IAAI,qBAAqB,EAAE,CAAC","sourcesContent":["import { EventEmitter } from 'events';\nimport { applicationContext } from '../../../injection/src/appplication-context';\nimport { decoratedItemIsMethod } from './utils';\nimport { InvalidDecoratedItemError } from '../../../configuration/error';\nimport { router } from '../routing/router';\n\nexport class ApplicationReadyState {\n\n    private isReadyEventEmitter: EventEmitter = new EventEmitter();\n    private isReady: boolean = false;\n\n    private targetNumberOfRoutes: number = 0;\n    private initializedRoutes: number = 0;\n\n    public incrementTargetNumberOfRoutes(): void {\n        ++this.targetNumberOfRoutes;\n    }\n\n    public incrementInitializedRoutes(): void {\n        ++this.initializedRoutes;\n        if ( this.initializedRoutes === this.targetNumberOfRoutes ) {\n            this.isReadyEventEmitter.emit('ready');\n            this.isReadyEventEmitter.removeAllListeners('ready');\n        }\n    }\n\n    public ifReady( callback: () => void ) {\n        if ( this.isReady ) {\n            callback();\n        } else {\n            this.isReadyEventEmitter.addListener('ready', callback);\n        }\n    }\n\n    public initializeRoute( httpMethod: string, route: string, target: any, methodName: string ): void {\n        // TODO Polish the load time with an good metric (timeout value)\n        // This will change effectively the evaluation order of the typescript decorators.\n        // To ensure decorators, on which this decorator relies on, are evaluated\n        setTimeout(() => {\n            applicationContext.loadDependency(target.constructor).then(( component: any ) => {\n                const method: unknown = component[methodName];\n                if ( !decoratedItemIsMethod(method) ) {\n                    throw new InvalidDecoratedItemError(target, methodName);\n                }\n                this.incrementInitializedRoutes();\n                router.registerRoute(httpMethod, route, () => method.apply(component));\n            })\n        }, 100);\n    }\n}\n\nexport const applicationReadyState: ApplicationReadyState = new ApplicationReadyState();\n"]}