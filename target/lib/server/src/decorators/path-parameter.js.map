{"version":3,"file":"path-parameter.js","sourceRoot":"","sources":["../../../../../lib/server/src/decorators/path-parameter.ts"],"names":[],"mappings":";;AAAA,4BAA0B;AAG1B,mCAMiB;AACjB,MAAM,SAAS,GAAW,OAAO,CAAC;AAElC,SAAgB,aAAa,CAAE,gBAAqB,EAAE,gBAAiC,EAAE,cAAmC;IACxH,IAAK,0BAAkB,CAAC,gBAAgB,EAAE,gBAAgB,EAAE,cAAc,CAAC,EAAG;QAC1E,OAAO,uBAAe,CAAC,SAAS,EAAE,gBAAgB,EAAE,gBAAiD,CAAC,CAAC;KAC1G;SAAM,IAAK,OAAO,cAAc,KAAK,QAAQ,EAAG;QAC7C,cAAc,CAAC,gBAAgB,EAAE,gBAA6B,EAAE,cAAc,CAAC,CAAC;KACnF;AACL,CAAC;AAND,sCAMC;AAED,SAAS,cAAc,CAAE,MAAW,EAAE,WAAsB,EAAE,cAAsB;IAChF,MAAM,aAAa,GAAG,SAAS,GAAG,0BAAkB,CAAC,MAAM,CAAC,WAAW,CAAC,EAAE,cAAc,CAAC,CAAC;IAC1F,wCAAgC,CAAC,MAAM,CAAC,WAAW,CAAC,EAAE,aAAa,EAAE,cAAc,CAAC,CAAC;AACzF,CAAC","sourcesContent":["import 'reflect-metadata';\n\nimport { Qualifier } from '../../../global-types';\nimport {\n    getNameOfParameter,\n    handleAsFactory,\n    isParameterFactory,\n    registerParameterIndexInMetadata,\n    SecondArgument\n} from './utils';\nconst namespace: string = 'path:';\n\nexport function PathParameter( nameOrSerializer: any, serializerOrName?: SecondArgument, parameterIndex?: number | undefined ): any {\n    if ( isParameterFactory(nameOrSerializer, serializerOrName, parameterIndex) ) {\n        return handleAsFactory(namespace, nameOrSerializer, serializerOrName as Function | string | undefined);\n    } else if ( typeof parameterIndex === 'number' ) {\n        plainDecorator(nameOrSerializer, serializerOrName as Qualifier, parameterIndex);\n    }\n}\n\nfunction plainDecorator( target: any, propertyKey: Qualifier, parameterIndex: number  ): void {\n    const parameterName = namespace + getNameOfParameter(target[propertyKey], parameterIndex);\n    registerParameterIndexInMetadata(target[propertyKey], parameterName, parameterIndex);\n}\n"]}